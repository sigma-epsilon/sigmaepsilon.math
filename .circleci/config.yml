version: 2.1

orbs:
  python: circleci/python@2.1.1
  codecov: codecov/codecov@4.0.1

executors:
  my-executor:
    docker:
      - image: cimg/python:3.10

jobs:
  run_tests:
    executor: my-executor
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Install project
          command: |
            poetry install --with test
      - run:
          name: Run tests and generate coverage report
          command: |
            chmod +x ./run_pytest_cov.sh
            ./run_pytest_cov.sh
      - run:
          name: List working directory contents
          command: ls -al
      - run:
          name: List home directory contents
          command: ls -a ~
      - run:
          name: List contents of htmlcov directory
          command: ls -al htmlcov
      - codecov/upload
      - store_artifacts:
          name: Store coverage report as artifact
          path: htmlcov
      - store_test_results:
          name: Store test results
          path: test-results

  deploy_to_test_pypi:
    executor: my-executor
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Build project
          command: |
            poetry install
            poetry build
      - run:
          name: Deploy to TestPyPI
          command: |
            poetry config repositories.testpypi https://test.pypi.org/legacy/
            poetry config pypi-token.testpypi $TEST_PYPI_TOKEN
            poetry publish -r testpypi --skip-existing
  
  deploy_to_pypi:
    executor: my-executor
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Build project
          command: |
            poetry install
            poetry build
      - run:
          name: Deploy to PyPI
          command: |
            poetry config pypi-token.pypi $PYPI_TOKEN
            poetry publish -r pypi --skip-existing

workflows:
  test_and_deploy_to_test_pypi:
    jobs:
      - run_tests

      - deploy_to_test_pypi:
          context:
            - TestPyPI deploy
          requires:
            - run_tests
          filters:
            branches:
              only:
                - test

      - deploy_to_pypi:
          context:
            - PyPI deploy
          requires:
            - run_tests
          filters:
            branches:
              only:
                - main
