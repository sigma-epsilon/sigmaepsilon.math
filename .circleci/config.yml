version: 2.1

orbs:
  python: circleci/python@2.1.1
  codecov: codecov/codecov@4.0.1

jobs:
  run_tests:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout  # checkout source code to working directory
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Build project
          command: |
            poetry install --with test
            poetry build
      - run:
          name: Run tests and generate coverage report
          command: |
            chmod +x ./run_pytest_cov.sh
            ./run_pytest_cov.sh
      - codecov/upload
      - store_artifacts:
          name: Store coverage report as artifact
          path: htmlcov

  deploy_to_test_pypi:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout  # checkout source code to working directory
      - run:
          name: Deploy to pypi
          command: |
            poetry config repositories.testpypi https://test.pypi.org/legacy/
            poetry config pypi-token.pypi $TEST_PYPI_TOKEN
            poetry publish -r testpypi
  
  deploy_to_pypi:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout  # checkout source code to working directory
      - run:
          name: Deploy to pypi
          command: |
            python -m twine upload --skip-existing dist/*

workflows:
  test_and_deploy_to_test_pypi:
    jobs:
      - run_tests

      - deploy_to_test_pypi:
          context:
            - TestPyPI deploy
          requires:
            - run_tests
          filters:
            branches:
              only:
                - test

      - deploy_to_pypi:
          context:
            - PyPI deploy
          requires:
            - run_tests
          filters:
            branches:
              only:
                - main
